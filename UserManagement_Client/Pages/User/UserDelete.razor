@page "/user/delete/{id:int}"

@inject IUserService _userService
@inject NavigationManager _navigationManager


<div>
    <h3 class="card-title text-primary mb-3">Delete User</h3>
</div>

@if (IsProcessing)
    {
    <div style="position:fixed;top:50%;left:50%;margin-top:-50px;margin-left:-100px;">
        <img src="images/ajax-loader.gif" />
    </div>
    }
    else
    {
<p>Do you really want to delete this user?</p>

<div class="form-group py-2">
    <EditForm Model="InputUser" OnValidSubmit="HandleDelete">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="form-group">
            <label>Forename</label>
            <InputText @bind-Value="InputUser.Forename" class="form-control"></InputText>
            <ValidationMessage For="() => InputUser.Forename"></ValidationMessage>
        </div>
        <div class="form-group">
            <label>Surname</label>
            <InputText @bind-Value="InputUser.Surname" class="form-control"></InputText>
            <ValidationMessage For="() => InputUser.Surname"></ValidationMessage>
        </div>
        <div class="form-group">
            <label>Date Of Birth</label>
            <InputText @bind-Value="InputUser.DateOfBirth" class="form-control"></InputText>
            <ValidationMessage For="() => InputUser.DateOfBirth"></ValidationMessage>
        </div>

        <div class="form-group">
            <label>Email</label>
            <InputText @bind-Value="InputUser.Email" class="form-control"></InputText>
            <ValidationMessage For="() => InputUser.Email"></ValidationMessage>
        </div>


        <div class="form-group col-6">
            <div class="form-check">
                <label class="form-check-label">Is Active?</label>
                <InputCheckbox @bind-Value="InputUser.IsActive" class="form-check-input"></InputCheckbox>
            </div>
        </div>



        <div class="form-group py-2">
            <button class="btn btn-danger">Delete</button>
            <NavLink href="/users" class="btn btn-secondary">Back to User List</NavLink>
        </div>

    </EditForm>
    
</div>


    }

@code {


    [Parameter]
    public int Id { get; set; }
    public bool IsProcessing { get; set; } = false;

    private UserDTO InputUser { get; set; } = new();
    protected override async Task OnInitializedAsync()
    {


        IsProcessing = true;
        var result = await _userService.Get(Id);
        InputUser = result;
        IsProcessing = false;


    }

    private async Task HandleDelete()
    {
         await _userService.Delete(InputUser);
        _navigationManager.NavigateTo("users");
    }
}
