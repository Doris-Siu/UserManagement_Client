@page "/user/create"
@page "/user/edit/{id:int}"



@inject NavigationManager _navigationManager
@inject IUserService _userService


    <div>
        <h3 class="card-title text-primary mb-3">@Title User</h3>
    </div>

    <div class="col-md-10">
       
        <EditForm Model="InputUser" OnValidSubmit="UpsertUser">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <div class="form-group">
                <label>Forename</label>
                <InputText @bind-Value="InputUser.Forename" class="form-control"></InputText>
                <ValidationMessage For="() => InputUser.Forename"></ValidationMessage>
            </div>
            <div class="form-group">
                <label>Surname</label>
                <InputText @bind-Value="InputUser.Surname" class="form-control"></InputText>
                <ValidationMessage For="() => InputUser.Surname"></ValidationMessage>
            </div>
            <div class="form-group">
                <label>Date Of Birth</label>
                <InputText @bind-Value="InputUser.DateOfBirth" class="form-control"></InputText>
                <ValidationMessage For="() => InputUser.DateOfBirth"></ValidationMessage>
            </div>

            <div class="form-group">
                <label>Email</label>
                <InputText @bind-Value="InputUser.Email" class="form-control"></InputText>
                <ValidationMessage For="() => InputUser.Email"></ValidationMessage>
            </div>


            <div class="form-group col-6">
                <div class="form-check">
                    <label class="form-check-label">Is Active?</label>
                    <InputCheckbox @bind-Value="InputUser.IsActive" class="form-check-input"></InputCheckbox>
                </div>
            </div>
            


            <div class="form-group py-2">
                <button class="btn btn-primary">@Title</button>
                <NavLink href="/users" class="btn btn-secondary">Back to User List</NavLink>
            </div>

        </EditForm>

    </div>
   

@code {
    private List<UserDTO> users = new(){
            new UserDTO { Id = 1, Forename = "Peter", Surname = "Loew", Email = "ploew@example.com", IsActive = true },
            new UserDTO { Id = 2, Forename = "Benjamin Franklin", Surname = "Gates", Email = "bfgates@example.com", IsActive = true },
            new UserDTO { Id = 3, Forename = "Castor", Surname = "Troy", Email = "ctroy@example.com", IsActive = false },
            new UserDTO { Id = 4, Forename = "Memphis", Surname = "Raines", Email = "mraines@example.com", IsActive = true },
            new UserDTO { Id = 5, Forename = "Stanley", Surname = "Goodspeed", Email = "sgodspeed@example.com", IsActive = true },
            new UserDTO { Id = 6, Forename = "H.I.", Surname = "McDunnough", Email = "himcdunnough@example.com", IsActive = true },
            new UserDTO { Id = 7, Forename = "Cameron", Surname = "Poe", Email = "cpoe@example.com", IsActive = false },
            new UserDTO { Id = 8, Forename = "Edward", Surname = "Malus", Email = "emalus@example.com", IsActive = false },
            new UserDTO { Id = 9, Forename = "Damon", Surname = "Macready", Email = "dmacready@example.com", IsActive = false },
            new UserDTO { Id = 10, Forename = "Johnny", Surname = "Blaze", Email = "jblaze@example.com", IsActive = true },
            new UserDTO { Id = 11, Forename = "Robin", Surname = "Feld", Email = "rfeld@example.com", IsActive = true },
    };

    [Parameter]
    public int Id { get; set; }

    private string Title { get; set; } = "Create";
    private UserDTO InputUser { get; set; } = new();


    protected override void OnInitialized()
    {
        if (Id != 0)
        {
            //update
            Title = "Edit";

        }

    }

    //UNDO - expert - API connection
    private async Task UpsertUser()
    {
        if (Id == 0)
        {
            //create
            var result = await _userService.Create(InputUser);
            if (result.success)
            {
                _navigationManager.NavigateTo($"user/edit/{result.dto.Id}");
            }
        }
        else
        {
            //update
            //await _userService.Update(User);
        }

        _navigationManager.NavigateTo("users");

    }


}
