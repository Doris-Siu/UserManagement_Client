@page "/user/create"
@page "/user/edit/{id:int}"



@inject NavigationManager _navigationManager
@inject IUserService _userService


<div>
    <h3 class="card-title text-primary mb-3">@Title User</h3>
</div>
@if (IsProcessing)
    {
    <div style="position:fixed;top:50%;left:50%;margin-top:-50px;margin-left:-100px;">
        <img src="images/ajax-loader.gif" />
    </div>
}
else
{
    <div class="col-md-10">

        <EditForm Model="InputUser" OnValidSubmit="UpsertUser">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <div class="form-group">
                <label>Forename</label>
                <InputText @bind-Value="InputUser.Forename" class="form-control"></InputText>
                <ValidationMessage For="() => InputUser.Forename"></ValidationMessage>
            </div>
            <div class="form-group">
                <label>Surname</label>
                <InputText @bind-Value="InputUser.Surname" class="form-control"></InputText>
                <ValidationMessage For="() => InputUser.Surname"></ValidationMessage>
            </div>
            <div class="form-group">
                <label>Date Of Birth</label>
                <InputText @bind-Value="InputUser.DateOfBirth" class="form-control"></InputText>
                <ValidationMessage For="() => InputUser.DateOfBirth"></ValidationMessage>
            </div>

            <div class="form-group">
                <label>Email</label>
                <InputText @bind-Value="InputUser.Email" class="form-control"></InputText>
                <ValidationMessage For="() => InputUser.Email"></ValidationMessage>
            </div>


            <div class="form-group col-6">
                <div class="form-check">
                    <label class="form-check-label">Is Active?</label>
                    <InputCheckbox @bind-Value="InputUser.IsActive" class="form-check-input"></InputCheckbox>
                </div>
            </div>



            <div class="form-group py-2">
                <button class="btn btn-primary">@Title</button>
                <NavLink href="/users" class="btn btn-secondary">Back to User List</NavLink>
            </div>

        </EditForm>

    </div>
    }

    @code {
        [Inject]
        public ILogger _logger { get; set; }

        [Parameter]
        public int Id { get; set; }


        public bool IsProcessing { get; set; } = false;
        private string Title { get; set; } = "Create";
        private UserDTO InputUser { get; set; } = new();


        protected override async Task OnInitializedAsync()
        {
            if (Id != 0)
            {
                //update
                Title = "Edit";

                IsProcessing = true;
                var result = await _userService.Get(Id);
                InputUser = result;
                IsProcessing = false;
            }

        }

        private async Task UpsertUser()
        {
            if (Id == 0)
            {
                //create
                var result = await _userService.Create(InputUser);
                await _logger.LogTrace($"Create a user: {InputUser.Forename} {InputUser.Surname} with id {result.dto.Id}.");

            }
            else
            {
                //update
                InputUser.Id = Id;
                var result = await _userService.Update(InputUser);
                await _logger.LogTrace($"Edit a user: {InputUser.Forename} {InputUser.Surname} with id {InputUser.Id}.");

            }

            _navigationManager.NavigateTo("users");

        }

    }
